// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bgmarketDB;

#nullable disable

namespace bgmarketDB.Migrations
{
    [DbContext(typeof(bgmarketContext))]
    partial class bgmarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bgmarketDB.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("bgmarketDB.Models.LogSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("ipOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("usuarioId");

                    b.ToTable("LogsSistema");
                });

            modelBuilder.Entity("bgmarketDB.Models.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("numeroLote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioIngresoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productoId");

                    b.HasIndex("usuarioIngresoId");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("bgmarketDB.Models.MovimientoInventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cantidadAnterior")
                        .HasColumnType("int");

                    b.Property<int>("cantidadMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("cantidadResultante")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("loteId")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("loteId");

                    b.HasIndex("usuarioId");

                    b.ToTable("MovimientosInventario");
                });

            modelBuilder.Entity("bgmarketDB.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidadMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("categoriaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("bgmarketDB.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("bgmarketDB.Models.LogSistema", b =>
                {
                    b.HasOne("bgmarketDB.Models.Usuario", "usuario")
                        .WithMany("LogsSistema")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("bgmarketDB.Models.Lote", b =>
                {
                    b.HasOne("bgmarketDB.Models.Producto", "Producto")
                        .WithMany("Lotes")
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bgmarketDB.Models.Usuario", "UsuarioIngreso")
                        .WithMany("LotesIngresados")
                        .HasForeignKey("usuarioIngresoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("UsuarioIngreso");
                });

            modelBuilder.Entity("bgmarketDB.Models.MovimientoInventario", b =>
                {
                    b.HasOne("bgmarketDB.Models.Lote", "Lote")
                        .WithMany("Movimientos")
                        .HasForeignKey("loteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bgmarketDB.Models.Usuario", "Usuario")
                        .WithMany("Movimientos")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lote");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("bgmarketDB.Models.Producto", b =>
                {
                    b.HasOne("bgmarketDB.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("bgmarketDB.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("bgmarketDB.Models.Lote", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("bgmarketDB.Models.Producto", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("bgmarketDB.Models.Usuario", b =>
                {
                    b.Navigation("LogsSistema");

                    b.Navigation("LotesIngresados");

                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
